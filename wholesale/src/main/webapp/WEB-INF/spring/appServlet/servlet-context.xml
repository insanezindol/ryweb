<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">

	<context:component-scan base-package="kr.co.reyonpharm" use-default-filters="false">
		<context:include-filter expression="org.springframework.stereotype.Controller" type="annotation" />
	</context:component-scan>
	
	<security:global-method-security secured-annotations="enabled" pre-post-annotations="enabled" />
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" cache-period="86400" />
	<mvc:resources mapping="/css/**" location="/resources/css/" cache-period="86400" />
	<mvc:resources mapping="/fonts/**" location="/resources/fonts/" cache-period="86400" />
	<mvc:resources mapping="/img/**" location="/resources/img/" cache-period="86400" />
	<mvc:resources mapping="/js/**" location="/resources/js/" cache-period="86400" />
	<mvc:resources mapping="/temp/**" location="/resources/temp/" cache-period="86400" />
	<mvc:resources mapping="/favicon.ico" location="/resources/favicon.ico" cache-period="86400" />
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />
	
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
	 	<property name="messageConverters">
	 		<util:list list-class="java.util.ArrayList">
	 			<ref bean="mappingJackson2HttpMessageConverter" />
			</util:list>
		</property>
	</bean>
	<bean id="mappingJackson2HttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>

	<!-- ViewResolver start -->
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order" value="0" />
	</bean>
	
	<bean id="downloadView" class="kr.co.reyonpharm.util.FileDownloadView" />

	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="order" value="1"/>
		<property name="contentNegotiationManager">
			<bean class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
			    <property name="mediaTypes">
			        <map>
			            <entry key="json" value="application/json" />
			            <entry key="xml" value="application/xml" />
			        </map>
			    </property>
			</bean>	
		</property>
		<property name="defaultViews">
			<list>
				<bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />
				<bean class="org.springframework.web.servlet.view.xml.MarshallingView">
					<property name="marshaller">
						<bean class="org.springframework.oxm.castor.CastorMarshaller" />
					</property>
				</bean>
			</list>
		</property>		
	</bean>
		
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="2" />
	</bean>
	<!-- ViewResolver end -->
	
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="104857600" /> <!-- 100 MB = 104857600 Byte -->
	</bean>
	
</beans>
